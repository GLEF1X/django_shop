# Generated by Django 3.1.7 on 2021-03-13 19:06

import datetime
from django.db import migrations, models
import django.db.models.deletion
import store.utils.values_worker


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Когда добавлен')),
                ('quantity', models.SmallIntegerField(default=1, verbose_name='Кол-во товара в корзине')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Корзина',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Название категории')),
                ('slug', models.SlugField(default='0', max_length=70)),
                ('photo', models.ImageField(db_index=True, null=True, upload_to='product/categories/', verbose_name='Фотография категории')),
                ('discount', models.IntegerField(db_index=True, default=0, verbose_name='Скидка на товар')),
                ('description', models.TextField(db_index=True, default=None, null=True, verbose_name='Описание товара')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(auto_now_add=True, db_index=True, verbose_name='Время заказа')),
                ('canceled', models.BooleanField(default=False, verbose_name='Продан ли товар')),
                ('discount', models.SmallIntegerField(default=0, verbose_name='Бонус при покупке')),
                ('unique_abbreviation', models.SlugField(default=store.utils.values_worker.generate_abbreviation, max_length=8, verbose_name='Уникальный номер заказа')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['order_date'],
                'get_latest_by': ['order_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.DecimalField(decimal_places=4, default=1, max_digits=8, verbose_name='Цена за штуку')),
                ('quantity', models.SmallIntegerField(default=1, verbose_name='Кол-во товаров в чеке')),
            ],
            options={
                'db_table': 'news_order_details',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200, verbose_name='Наименование продукта')),
                ('color', models.CharField(choices=[('RED', 'Красный'), ('BLACK', 'Черный'), ('WHITE', 'Белый'), ('C', 'Пользовательский')], default='C', max_length=30, verbose_name='Цвет товара')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Цена товара')),
                ('created_at', models.DateField(db_index=True, default=datetime.date.today, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(db_index=True, default=None, null=True, verbose_name='Описание товара')),
                ('quantity', models.SmallIntegerField(default=0, verbose_name='Кол-во товара(на складе)')),
                ('discontinued', models.BooleanField(default=False, verbose_name='Закончился ли товар?')),
                ('slug', models.SlugField(default=store.utils.values_worker.generate_abbreviation, max_length=8, verbose_name='Уникальный идентификатор продукта')),
                ('photo', models.ImageField(db_index=True, default=None, null=True, upload_to='product/product_photos/%Y/%m/%d', verbose_name='Фотография товара')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст комментария')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен ли комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Коментарии',
                'ordering': ['created_at'],
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя пользователя')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия пользователя')),
                ('email', models.EmailField(db_index=True, max_length=200, unique=True, verbose_name='Email пользователя')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Баланс пользователя')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['first_name', 'last_name'], name='store_user_first_n_94f251_idx'),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='store.product'),
        ),
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='store.user', verbose_name='Пользователь, который оставил комментарий'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='store.category', verbose_name='Номер категории'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ManyToManyField(through='store.OrderDetails', to='store.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.SET_DEFAULT, to='store.user', verbose_name='Юзер, который сделал заказ'),
        ),
        migrations.AddField(
            model_name='basket',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.product', verbose_name='Продукт, который был занесён в корзину'),
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users', to='store.user', verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['body'], name='store_revie_body_beefd1_idx'),
        ),
    ]
